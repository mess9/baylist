package org.baylist.service;

import jakarta.transaction.Transactional;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import org.baylist.db.entity.Category;
import org.baylist.db.entity.User;
import org.baylist.dto.telegram.Callbacks;
import org.baylist.dto.telegram.ChatValue;
import org.baylist.dto.telegram.Commands;
import org.baylist.dto.telegram.State;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Contact;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardRow;

import java.util.LinkedList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static org.baylist.util.Util.getName;

@Component
@RequiredArgsConstructor
@FieldDefaults(makeFinal = true, level = AccessLevel.PRIVATE)
public class CommonResponseService {

	TodoistService todoist;
	UserService userService;
	DictionaryService dictionaryService;
	MenuService menuService;


	public void cancelMessage(ChatValue chatValue) {
		chatValue.setReplyText("–æ–∫. –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥—É—Ç –¥–µ—è–Ω–∏—è\n" +
				"–∞ –ø–æ–∫–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á.");
		chatValue.setState(State.DEFAULT);
	}

	public void textChoiceRemoveCategory(ChatValue chatValue, boolean isEdit) {
		if (isEdit) {
			chatValue.setEditText("""
					–∫–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–¥–∞–ª–∏—Ç—å?
					
					<i>–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ, –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π —É–¥–∞–ª—è—é—Ç—Å—è –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–¥–∞—á</i>
					""");
			chatValue.setEditReplyParseModeHtml();
		} else {
			chatValue.setReplyText("""
					–∫–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–¥–∞–ª–∏—Ç—å?
					
					<i>–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ, –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π —É–¥–∞–ª—è—é—Ç—Å—è –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–¥–∞—á</i>
					""");
			chatValue.setReplyParseModeHtml();
		}
	}

	public void textChoiceRemoveVariant(ChatValue chatValue, boolean success) {
		if (success) {
			chatValue.setReplyText("–≤–≤–µ–¥—ë–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã");
		} else {
			chatValue.setReplyText("–≤–≤–µ–¥—ë–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑" +
					" –Ω–æ –∫–∞–∫-—Ç–æ —Ç–∞–∫ —á—Ç–æ –±—ã —Å—Ä–∞–±–æ—Ç–∞–ª–æ");
		}
	}

	public void checkAndView(ChatValue chatValue, boolean isMenu) {
		List<User> recipients = todoist.checkRecipients(chatValue);

		if (recipients.isEmpty()) {
			menuService.mainMenu(chatValue, false);
			chatValue.setReplyText("""
					–Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ —á–µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
					<i>–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–∞–∂–¥—ã...</i>
					""");
			chatValue.setReplyParseModeHtml();
		} else if (recipients.size() == 1) {
			view(chatValue, recipients.getFirst(), isMenu);
		} else {
			chatValue.setReplyText("–≤—ã–±–µ—Ä–∏—Ç–µ —á—å–∏ –∑–∞–¥–∞—á–∫–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å");
			chatValue.setReplyKeyboard(recipientsKeyboard(recipients, false));
		}
	}

	public void view(ChatValue chatValue, User recipient, boolean isMenu) {
		if (isMenu) {
			InlineKeyboardMarkup markup = new InlineKeyboardMarkup(List.of(
					new InlineKeyboardRow(InlineKeyboardButton.builder()
							.text("–Ω–∞–∑–∞–¥")
							.callbackData(Callbacks.MAIN_MENU.getCallbackData())
							.build())));
			chatValue.setEditText(todoist.getBuylistProject(recipient));
			chatValue.setEditReplyParseModeHtml();
			chatValue.setEditReplyKeyboard(markup);
			chatValue.setState(State.MENU);
		} else {
			chatValue.setReplyText(todoist.getBuylistProject(recipient));
			chatValue.setReplyParseModeHtml();
			chatValue.setState(State.DEFAULT);
		}
	}

	public InlineKeyboardMarkup recipientsKeyboard(List<User> recipients, boolean isSend) {
		List<InlineKeyboardRow> rows = new LinkedList<>();
		Callbacks callbacks;
		if (isSend) {
			callbacks = Callbacks.SEND_TASK_TO;
		} else {
			callbacks = Callbacks.VIEW_TASK_TO;
		}
		recipients.forEach(r -> rows.add(new InlineKeyboardRow(InlineKeyboardButton.builder()
				.text(getName(r))
				.callbackData(callbacks.getCallbackData() + r.getUserId())
				.build())));
		rows.add(new InlineKeyboardRow(InlineKeyboardButton.builder()
				.text("–æ—Ç–º–µ–Ω–∞")
				.callbackData(Callbacks.CANCEL.getCallbackData())
				.build()));
		return new InlineKeyboardMarkup(rows);
	}

	@Transactional
	public void info(ChatValue chatValue) {
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(List.of(
				new InlineKeyboardRow(InlineKeyboardButton.builder()
						.text("–Ω–∞–∑–∞–¥")
						.callbackData(Callbacks.MAIN_MENU.getCallbackData())
						.build())
		));

		StringBuilder sb = new StringBuilder();
		boolean existToken = userService.isExistToken(chatValue.getUser().getUserId());
		User user = userService.getUserFromDb(chatValue.getUser().getUserId());
		List<Category> categoriesByUserId = dictionaryService.getCategoriesByUserId(user.getUserId());
		long variants = 0;
		if (!categoriesByUserId.isEmpty()) {
			variants = categoriesByUserId.stream()
					.filter(c -> !c.getVariants().isEmpty())
					.mapToLong(c -> c.getVariants().size())
					.sum();
		}
		List<User> friends = user.getFriends();
		List<User> friendList = userService.getFriendMe(user.getUserId());


		sb.append("<b>—Å–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n")
				.append("–≤–∞—Å –∑–æ–≤—É—Ç - ")
				.append(getName(user))
				.append("\n\n");
		if (existToken) {
			sb.append("–≤—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ todoist\n\n");
			if (!categoriesByUserId.isEmpty()) {
				sb.append("–≤—ã —Å–æ–∑–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–¥–∞—á - ").append(categoriesByUserId.size()).append("\n");
				categoriesByUserId.forEach(c -> sb.append(" <code>").append(c.getName()).append("</code>\n"));
				if (variants > 0) {
					sb.append("<i>–≤—ã —Å–æ–∑–¥–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–∞–¥–∞—á - </i>").append(variants).append("\n\n");
				} else {
					sb.append("<i>–≤—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–∞–¥–∞—á –≤ –≤–∞—à–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö </i> <b>:(</b>\n\n");
				}
			} else {
				sb.append("<i>–≤—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–¥–∞—á </i> <b>:(</b>\n\n");
			}
			checkFriends(friends, sb);
		} else {
			if (friendList.isEmpty()) {
				sb.append("""
						–≤—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ todoist
						
						–∏ —É –≤–∞—Å –Ω–µ—Ç –¥—Ä—É–∑–µ–π
						–∫–æ—Ç–æ—Ä—ã–µ –±—ã –≤–Ω–µ—Å–ª–∏ –±—ã –≤–∞—Å –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –∏–º –∑–∞–¥–∞—á
						–¥–ª—è –≤–∞—Å —ç—Ç–æ—Ç –±–æ—Ç
						–ø–æ–∫–∞ —á—Ç–æ
						—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–æ–ª–µ–∑–µ–Ω
						<b>:(</b>
						""");
			} else {
				sb.append("–≤—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ todoist\n–Ω–æ —É –≤–∞—Å –µ—Å—Ç—å ");
				checkFriendsMe(friendList, sb);
			}
		}

		chatValue.setEditText(sb.toString());
		chatValue.setEditReplyKeyboard(markup);
		chatValue.setEditReplyParseModeHtml();
		chatValue.setState(State.MENU);
	}

	private void checkFriends(List<User> friends, StringBuilder sb) {
		if (!friends.isEmpty()) {
			if (friends.size() > 1) {
				sb.append("—É –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è:\n");
				friends.forEach(f -> sb.append(" <code>")
						.append(getName(f))
						.append("</code>\n"));
			} else {
				sb.append("—É –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–≥!\n");
				friends.forEach(f -> sb.append(" <code>")
						.append(getName(f))
						.append("</code>\n"));
			}
		} else {
			sb.append("—É –≤–∞—Å –Ω–µ—Ç –¥—Ä—É–∑–µ–π\n");
		}
	}

	private void checkFriendsMe(List<User> friendList, StringBuilder sb) {
		if (friendList.size() > 1) {
			sb.append("–¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã–º –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏:\n");
			friendList.forEach(f -> sb.append(" <code>")
					.append(getName(f))
					.append("</code>\n"));
		} else {
			sb.append("–¥—Ä—É–≥, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏:\n");
			friendList.forEach(f -> sb.append(" <code>")
					.append(getName(f))
					.append("</code>\n"));
		}
	}

	public void cancel(ChatValue chatValue, boolean isEdit) {
		if (isEdit) {
			chatValue.setEditText("–≤–µ—Ä–Ω—É–ª—Å—è –≤ —Ä–µ–∂–∏–º –ø—Ä–∏—ë–º–∞ –∑–∞–¥–∞—á");
		} else {
			chatValue.setReplyText("–≤–µ—Ä–Ω—É–ª—Å—è –≤ —Ä–µ–∂–∏–º –ø—Ä–∏—ë–º–∞ –∑–∞–¥–∞—á");
		}
		chatValue.setState(State.DEFAULT);
	}

	public void existToken(ChatValue chatValue) {
		chatValue.setEditText("—Ç–æ–∫–µ–Ω —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω");
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
				List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
								.text("–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
								.callbackData(Callbacks.START_1_TODOIST_TOKEN_CHANGE.getCallbackData())
								.build()),
						new InlineKeyboardRow(InlineKeyboardButton.builder()
								.text("–Ω–µ–∞")
								.callbackData(Callbacks.START_2_FRIENDS_REQUEST.getCallbackData())
								.build())
				));
		chatValue.setEditReplyKeyboard(markup);
	}

	public void tokenRequest(ChatValue chatValue) {
		chatValue.setReplyText("""
				üîë –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ todoist
				<b> –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω </b>
				0. —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è –Ω–∞ todoist.com
				1. –ø–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ —Å—Å—ã–ª–∫–µ https://todoist.com/prefs/integrations
				(–µ—Å–ª–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -> –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ -> –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
				2. –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"
				3. –∫–æ–ø–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –±–æ—Ç—É (–≤—Å—Ç–∞–≤–∏—Ç—å –≤ —á–∞—Ç, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
				
				üëâ –≤ –±—É–¥—É—â–µ–º todoist —Å—Ç–∞–Ω–µ—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º, –Ω–æ –ø–æ–∫–∞ <i>–∏ —Ç–∞–∫ —Å–æ–π–¥—ë—Ç</i> üòä.
				""");
		chatValue.setReplyParseModeHtml();
	}

	public void tokenResponse(ChatValue chatValue, boolean isStart) {
		String inputText = chatValue.getInputText();
		String regex = "[0-9a-f]{40}";
		Pattern pattern = Pattern.compile(regex);
		Matcher matcher = pattern.matcher(inputText);
		if (inputText.equals(Commands.START.getCommand())) {
			start(chatValue);
		} else if (matcher.matches() && inputText.length() == 40) {
			userService.saveToken(chatValue, inputText);
			todoist.createProject(chatValue);
			InlineKeyboardMarkup markup;
			if (isStart) {
				markup = InlineKeyboardMarkup.builder()
						.keyboard(List.of(
								new InlineKeyboardRow(List.of(
										InlineKeyboardButton.builder()
												.text("–¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–∑–µ–π(–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ–∑–∂–µ)")
												.callbackData(Callbacks.START_2_ADD_FRIENDS.getCallbackData())
												.build())),
								new InlineKeyboardRow(List.of(
										InlineKeyboardButton.builder()
												.text("–∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
												.callbackData(Callbacks.START_DONE.getCallbackData())
												.build()))))
						.build();
			} else {
				markup = InlineKeyboardMarkup.builder()
						.keyboard(List.of(
								new InlineKeyboardRow(List.of(
										InlineKeyboardButton.builder()
												.text("yay!")
												.callbackData(Callbacks.MAIN_MENU.getCallbackData())
												.build()))))
						.build();
				chatValue.setState(State.MENU);
			}

			chatValue.setReplyText("""
					üîë —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, —Å–ø–∞—Å–∏–±–æ!
					
					–≤ <b>todoist</b> –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç <b>"buylist"</b>, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞–¥–∞—á–∏ –æ—Ç –≤–∞—Å –∏ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π
					<i>(–µ—Å–ª–∏ –æ–Ω–∏ —É –≤–∞—Å –µ—Å—Ç—å üòè)</i>.
					
					–¥–∞–∂–µ –µ—Å–ª–∏ –ª–∏–º–∏—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ todoist –∏—Å—á–µ—Ä–ø–∞–Ω, –±–æ—Ç –≤—Å—ë —Ä–∞–≤–Ω–æ –µ–≥–æ —Å–æ–∑–¥–∞—Å—Ç ‚Äì —ç—Ç–æ —Ç–∞–∫–∞—è api-–º–∞–≥–∏—è ‚ú®
					""");
			chatValue.setReplyKeyboard(markup);
			chatValue.setReplyParseModeHtml();
		} else {
			chatValue.setReplyText("""
					–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑
					
					–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /report –¥–∞–±—ã –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.
					""");
		}
	}

	@Transactional
	public void listMyFriends(ChatValue chatValue) {
		User user = userService.getUserFromDb(chatValue.getUser().getUserId());
		List<User> friends = user.getFriends();
		StringBuilder sb = new StringBuilder();
		checkFriends(friends, sb);
		chatValue.setEditText(sb.toString());
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
				List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
						.text("–Ω–∞–∑–∞–¥")
						.callbackData(Callbacks.FRIENDS_SETTINGS.getCallbackData())
						.build())));
		chatValue.setEditReplyKeyboard(markup);
		chatValue.setEditReplyParseModeHtml();
	}

	@Transactional
	public void listFriendsMe(ChatValue chatValue) {
		List<User> friendsMe = userService.getFriendMe(chatValue.getUser().getUserId());
		StringBuilder sb = new StringBuilder();
		if (friendsMe.isEmpty()) {
			sb.append("—É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π –∫–æ—Ç–æ—Ä—ã–º –≤—ã –±—ã –º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏...");
		} else {
			checkFriendsMe(friendsMe, sb);
		}
		chatValue.setEditText(sb.toString());
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
				List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
						.text("–Ω–∞–∑–∞–¥")
						.callbackData(Callbacks.FRIENDS_SETTINGS.getCallbackData())
						.build())));
		chatValue.setEditReplyKeyboard(markup);
		chatValue.setEditReplyParseModeHtml();
	}

	public void start(ChatValue chatValue) {
		chatValue.setReplyText("""
				üéâ YAY
				–±–æ—Ç —Å–æ–∑–¥–∞–Ω —Ñ–∏–ª–æ–º, —á—Ç–æ–±—ã —É–¥–æ–±–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–ø–∏—Å–∫–∏ –ø–æ–∫—É–ø–æ–∫ –∏ –¥–µ–ª.
				
				üõ† –æ—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è
				–±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏ –≤ <b>todoist</b> –ø—Ä—è–º–æ –∏–∑ telegram.
				
				—Ä–∞–Ω—å—à–µ —è –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞–ª —Å–ø–∏—Å–∫–∏ –≤ ¬´–∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª –≤ telegram, <b>–Ω–æ:</b>
				‚ùå –Ω–µ–ª—å–∑—è –æ—Ç–º–µ—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
				‚ùå –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Ä–∞–∑–±–∏–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤—Ä—É—á–Ω—É—é
				
				‚úîÔ∏è –∞ —Ç—É—Ç –±–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–∫–∏ –∑–∞–¥–∞—á, —Å–∞–º —Ä–∞–∑–±–∏–≤–∞–µ—Ç –∏—Ö –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ todoist üìå.
				
				üìÇ –≥–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
				<s>–Ω—É–∂–Ω–æ</s>–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–¥–∞—á –¥–ª—è –Ω–∏—Ö
				
				üë• —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
				–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏ –∏ —Å–µ–º—å—ë–π:
				
				–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏ —Å–µ–±–µ üìù
				–ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞—á–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö üè∑
				–∏ —Ç–∞–∫ –∏ —Ç–∞–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ üîÑ
				
				üîë –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ todoist
				—á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º –∑–∞–¥–∞—á–∏, –Ω—É–∂–Ω–æ:
				–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ <b>todoist</b>
				–ø–æ–ª—É—á–∏—Ç—å api-—Ç–æ–∫–µ–Ω (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –±—É–¥–µ—Ç –ø–æ–∑–∂–µ üìå)
				üëâ –≤ –±—É–¥—É—â–µ–º todoist —Å—Ç–∞–Ω–µ—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º, –Ω–æ –ø–æ–∫–∞ <i>–∏ —Ç–∞–∫ —Å–æ–π–¥—ë—Ç</i> üòä.
				
				‚öô –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
				—Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏–º –±–æ—Ç–∞! üöÄ
				""");
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
				List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
						.text("–Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
						.callbackData(Callbacks.START.getCallbackData())
						.build())));
		chatValue.setReplyKeyboard(markup);
		chatValue.setReplyParseModeHtml();
		chatValue.setState(State.START);
	}

	public void dictHelp(ChatValue chatValue) {
		chatValue.setEditText("""
				üìñ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª–æ–≤–∞—Ä–∏–∫
				
				<i><b>–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b> –∏ <b>–≤–∞—Ä–∏–∞–Ω—Ç—ã</b> ‚Äì —ç—Ç–æ –º–æ–π <u>–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–ª–æ–≤–∞—Ä–∏–∫</u>. –æ–Ω –ø–æ–º–æ–≥–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤ todoist.</i>
				
				üîπ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b> –≤ todoist –ø–æ—è–≤—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤ –Ω–∏—Ö.
				üîπ —á—Ç–æ–±—ã —è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–∫–∏–¥—ã–≤–∞–ª –∑–∞–¥–∞—á–∏, –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ –∑–Ω–∞—Ç—å –æ –Ω–∏—Ö ‚Äì –¥–ª—è —ç—Ç–æ–≥–æ –º—ã –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä–∏–∫.
				
				üìå –ø—Ä–∏–º–µ—Ä:
				–≤ —Å–ª–æ–≤–∞—Ä–∏–∫–µ –µ—Å—Ç—å –¥–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
				
				üõí <i>–ø—Ä–æ–¥—É–∫—Ç—ã</i>: <code>–ø–æ–º–∏–¥–æ—Ä—ã, –∫–∞—Ä—Ç–æ—à–∫–∞, –º–æ—Ä–∫–æ–≤–∫–∞</code>
				üì¶ <i>–ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏</i>: <code>–≤–±, –æ–∑–æ–Ω, –ø–æ—á—Ç–∞</code>
				–µ—Å–ª–∏ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å –º–Ω–µ:
				<code>–º–æ—Ä–∫–æ–≤–∫–∞</code>
				<code>–≤–±</code>
				
				—Ç–æ –≤ todoist –ø–æ—è–≤—è—Ç—Å—è –¥–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏ –≤ –∫–∞–∂–¥–æ–π –±—É–¥–µ—Ç –ø–æ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ ‚úÖ.
				
				–µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –º–∞—Ç—á–∏—Ç—Å—è –Ω–∏ –≤ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π(–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç) - –æ–Ω–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –≤–Ω–µ –≤—Å—è–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
				""");
		chatValue.setEditReplyParseModeHtml();
		chatValue.setState(State.DICT_SETTING);
		chatValue.setEditReplyKeyboard(new InlineKeyboardMarkup(List.of(new InlineKeyboardRow(
				InlineKeyboardButton.builder()
						.text("ok")
						.callbackData(Callbacks.DICT_SETTINGS.getCallbackData())
						.build()))));
	}

	public void doneWithouFriends(ChatValue chatValue, State state) {
		chatValue.setReplyText("""
				<i> –µ—Å–ª–∏ –±—ã —É –≤–∞—Å –±—ã–ª —Ç–æ–∫–µ–Ω todoist –≤—ã –±—ã –º–æ–≥–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–∑–µ–π –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º –∑–∞–¥–∞—á–∏ </i>
				
				–Ω–æ —É –≤–∞—Å –µ–≥–æ –Ω–µ—Ç
				—Ç–∞–∫ —á—Ç–æ –±–æ—Ç –¥–ª—è –≤–∞—Å –±—É–¥–µ—Ç –±–µ—Å–ø–æ–ª–µ–∑–µ–Ω –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤–∞—à –¥—Ä—É–≥ –Ω–µ –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –≤ –∫ —Å–µ–±–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ –±—ã –≤—ã –º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ–º—É –∑–∞–¥–∞—á–∏
				
				–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
				–º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ –º–µ–Ω—é –∏ –∑–∞–Ω–æ–≤–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–∫–µ–Ω
				/menu
				–∏–ª–∏ —Å–Ω–æ–≤–∞ –≤ —Ä–µ–∂–∏–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
				/start
				""");
		chatValue.setReplyParseModeHtml();
		chatValue.setState(state);
	}

	public void addFriend(ChatValue chatValue, Update update) {
		Contact contact = update.getMessage().getContact();
		if (userService.addFriend(chatValue, contact)) {
			chatValue.setReplyText("–¥—Ä—É–≥ –¥–æ–±–∞–≤–ª–µ–Ω");
			InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
					List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
									.text("–¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë")
									.callbackData(Callbacks.START_2_ADD_FRIENDS.getCallbackData())
									.build()),
							new InlineKeyboardRow(InlineKeyboardButton.builder()
									.text("–¥—Ä—É–∑—å—è –∫–æ–Ω—á–∏–ª–∏—Å—å")
									.callbackData(Callbacks.START_DONE.getCallbackData())
									.build())
					));
			chatValue.setReplyKeyboard(markup);
		} else {
			chatValue.setReplyText("—Ç–∞–∫–æ–π –¥—Ä—É–≥ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å, –¥–∞–≤–∞–π –¥—Ä—É–≥–æ–≥–æ");
			InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
					List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
									.text("–¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë")
									.callbackData(Callbacks.START_2_ADD_FRIENDS.getCallbackData())
									.build()),
							new InlineKeyboardRow(InlineKeyboardButton.builder()
									.text("–¥—Ä—É–∑—å—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
									.callbackData(Callbacks.START_DONE.getCallbackData())
									.build())
					));
			chatValue.setReplyKeyboard(markup);
		}
	}

	public void friendsHelp(ChatValue chatValue) {
		chatValue.setEditText("""
				<u>–æ—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è –±–æ—Ç–∞ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ–±–µ –∑–∞–¥–∞—á–∏ –≤ todoist</u> –∏ –ø–æ–∑–≤–æ–ª—è—Ç—å –¥—Ä—É–∑—å—è–º/—Å–µ–º—å–µ –¥–µ–ª–∞—Ç—å —Ç–æ –∂–µ —Å–∞–º–æ–µ, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞–¥–∞—á–∏ <u>–≤ —Ç–≤–æ–π</u> todoist.
				
				–∏–∑ —ç—Ç–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç:
				1Ô∏è‚É£ –µ—Å–ª–∏ —É —Ç–µ–±—è –ø—Ä–∏–≤—è–∑–∞–Ω todoist, —Ç—ã –º–æ–∂–µ—à—å:
				–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ–±–µ –∑–∞–¥–∞—á–∏ üìå
				–ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞—á–∏ –æ—Ç –¥—Ä—É–∑–µ–π, –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏–ª –∏—Ö –≤ –±–æ—Ç–∞ üë•
				
				2Ô∏è‚É£ –µ—Å–ª–∏ —É —Ç–µ–±—è <b>–Ω–µ—Ç</b> –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ todoist, —Ç—ã –º–æ–∂–µ—à—å:
				–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–º, —É –∫–æ–≥–æ –æ–Ω –µ—Å—Ç—å ‚úÖ
				—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –¥–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ –¥—Ä—É–∑—å—è üîë
				
				3Ô∏è‚É£ –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å todoist –∏ —Ç–µ–±—è –¥–æ–±–∞–≤–∏–ª–∏ –≤ –¥—Ä—É–∑—å—è –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å todoist, —Ç–æ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–¥–∞—á –ø–æ—è–≤–∏—Ç—Å—è –≤—ã–±–æ—Ä:
				–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–±–µ üìå
				–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ–º—É –∏–∑ –¥—Ä—É–∑–µ–π üë•
				<i>—Ä–∞–∑–±–∏–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ todoist. –∫–∞–∫ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–∏–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äì —Ç–∞–∫ –∏ –±—É–¥—É—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å—Å—è –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–¥–∞—á–∏, –æ—Ç –Ω–µ–≥–æ —Å–∞–º–æ–≥–æ –∏–ª–∏ –æ—Ç –¥—Ä—É–∑–µ–π.</i>
				
				üîπ <b>–≤–∞–∂–Ω–æ:</b> —á—Ç–æ–±—ã –¥—Ä—É–≥ –º–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∑–∞–¥–∞—á–∏, —É —Ç–µ–±—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å todoist –∏ —Ç—ã –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –¥—Ä—É–∑—å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞.
				""");
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(
				List.of(new InlineKeyboardRow(InlineKeyboardButton.builder()
						.text("–Ω–∞–∑–∞–¥")
						.callbackData(Callbacks.FRIENDS_SETTINGS.getCallbackData())
						.build())));
		chatValue.setEditReplyKeyboard(markup);
		chatValue.setEditReplyParseModeHtml();
	}

	public void friendsRequest(ChatValue chatValue, State state) {
		chatValue.setReplyText("""
				<b> –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π! </b>
				
				–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
				‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –Ω—É–∂–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º
				‚Äî –Ω–∞–∂–º–∏—Ç–µ –∑–Ω–∞—á–æ–∫ —Ç—Ä–µ—Ö —Ç–æ—á–µ–∫. –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–æ—à–∫–æ –º–µ–Ω—é. –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º¬ª.
				‚Äî –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ ‚Äî —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤. –≤—ã–±–µ—Ä–µ—Ç–µ –±–æ—Ç buylist (–∏–º—è –¥–ª—è –ø–æ–∏—Å–∫–∞ - buylistFAbot)
				""");
		chatValue.setReplyParseModeHtml();
		chatValue.setState(state);
	}


}
